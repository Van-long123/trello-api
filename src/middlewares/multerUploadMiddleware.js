import { StatusCodes } from 'http-status-codes'
import multer from 'multer'
import ApiError from '~/utils/ApiError'
import { ALLOW_FILE_TYPES, LIMIT_FILE_SIZE } from '~/utils/validators'

//  Function ki·ªÉm tra lo·∫°i file n√†o ƒë∆∞·ª£c ch·∫•p nh·∫≠n
const customFileFilter = (req, file, callback) => {
  // console.log('üöÄ ~ customFileFilter ~ file:', file)
  // ƒê·ªëi v·ªõi th·∫±ng multer ki·ªÉm tra ki·ªÉu file th√¨ s·ª≠ d·ª•ng mimetype
  if (!ALLOW_FILE_TYPES.includes(file.mimetype)) {
    const errMessage = 'File type is invalid. Only accept jpg, jpeg and png'
    // N·∫øu c√≥ l·ªói th√¨ truy·ªÅn error v√†o tham s·ªë th·ª© nh·∫•t;
    // tham s·ªë th·ª© 2 l√† th√†nh c√¥ng truy·ªÅn null
    return callback(new ApiError(StatusCodes.UNPROCESSABLE_ENTITY, errMessage), null)
  }

  // N·∫øu nh∆∞ ki·ªÉu file h·ª£p l·ªá
  // null c√≥ nghƒ©a l√† ko c√≥ l·ªói
  // true thanh c√¥ng ƒëi qua
  return callback(null, true)
}

// Kh·ªüi tao function upload file b·∫±ng multer
const upload = multer({
  // ki·ªÉm tra gi·ªõi h·∫°n c·ªßa file
  limits: { fileSize:LIMIT_FILE_SIZE },
  fileFilter: customFileFilter
})

export const multerUploadMiddleware = { upload }
